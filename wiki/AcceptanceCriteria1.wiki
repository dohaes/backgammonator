#summary Acceptance criteria scenarios on User Story 1

*User Story*

As a contestant<br/>
I want my program to use a protocol<br/>
so that it can interact with the system<br/>


*Scenario 1*
  # Every move is realized with game info, which is given to the player on the standard input and the player's move should be returned on the standard output.
  # The game info, needed to player to make its move will be on separate row for each move. It will be in the following format:<br />`<count_1> <possession_1> <count_2> <possession_2> ... <count_24> <possession_24> <hits_current> <hits_opponent> <bornoff_current> <bornoff_opponent> <die_1> <die_2> <game_status>`<br />Where<br />`<count_n>` is the number of checkers in point n - integer number between 0 and 15.<br />`<possession_n>` is the player whose are the checkers in point n - integer number between 0 and 1 (0 for current player, 1 for opponent player).<br />`<hits_current>` and `<hits_opponent>` are the numbers of hit checkers for the current and opponent players respectively - integer number between 0 and 15.<br />`<bornoff_current>` and `<bornoff_opponent>` are the numbers of born off checkers for the current and opponent players respectively - integer number between 0 and 15.<br />`<die_1>` and `<die_2>` are the dices' values - integer numbers between 1 and 6.<br />`<game_status>` gives information for the current game status:<br />0: Game is not over yet<br />1: Standard win for the current player<br />2: Double win for the current player<br />3: Triple win for the current player<br />4: Exception game end and the current player wins<br />5: Invalid move and the current player wins<br />6: Game end due timeout and the current player wins<br />7: Standard win for the opposite player<br />8: Double win for the opposite player<br />9: Triple win for the opposite player<br />10: Exception game end and the opposite player wins<br />11: Invalid move and the opposite player wins<br />12: Game end due timeout and the opposite player wins<br />
  # The returned move info from the player should be on separate row for each move. It should be in the following format:<br />`<start_point_1> <move_length_1> <start_point_2> <move_length_2> [ <start_point_3> <move_length_3> <start_point_4> <move_length_4> ]`<br />Where<br />`<start_point_n>` is the start point of the n-th checker move - integer number between 0 and 25. If the AI player reenters a hit checker he should use 25 for start point. If the AI player can't move, he should use 0 for start point.<br />`<move_length_n>` is the length of the n-th checker move - integer number between 1 and 6.<br />The number of checker moves might be 4 when the dice are double.

