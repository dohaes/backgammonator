<project name="Build Backgammonator" default="build" basedir=".">
	<!-- set global properties for this build -->
	<property name="project.home" location="../" />
	<property name="src" location="${project.home}/src" />
	<property name="sample" location="${project.home}/sample" />
	<property name="lib" location="${project.home}/lib" />
	<property name="res" location="${project.home}/res" />
	<property name="web" location="${project.home}/web" />
	<property name="build" location="${project.home}/classes" />
	<property name="classpath" location="${lib}/servlet.jar:
		${lib}/commons-fileupload.jar:
		${lib}/commons-io.jar" />

	<target name="build" depends="distLib, distWeb, distCore, clean" description="builds all jars"/>
	<target name="lib" depends="distLib" />
	<target name="web" depends="distWeb" />
	<target name="libfull" depends="distCore" />

	<target name="init">
		<!-- Create the time stamp -->
		<tstamp />
		<!-- Create the build directory structure used by compile -->
		<mkdir dir="${build}" />
		<!-- Create the distribution directory -->
		<mkdir dir="${lib}" />

		<copy todir="${build}">
			<fileset dir="${project.home}" includes="sample/**/*" />
		</copy>
		
		<copy todir="${build}">
			<fileset dir="${project.home}" includes="backgammonator.properties" />
		</copy>

	</target>

	<target name="compile" depends="init">
		<!-- Compile the java code from ${src} into ${build} -->
		<javac srcdir="${src}:${sample}/backgammonator/sample/player/interfacce/"
			   destdir="${build}"
			   debug="true"
			   debuglevel="lines, vars, and source"/>
		
		<javac srcdir="${web}"
			   destdir="${build}"
			   classpath="${classpath}"
			   debug="true"
			   debuglevel="lines, vars, and source"/>
	</target>

	<!-- user library for local game tests -->
	<target name="distLib" depends="compile">
		<jar jarfile="${lib}/backgammonatorLibrary.jar"
			 basedir="${build}"
			 manifest="${src}/meta-inf/manifest.mf"
			 includes="backgammonator/lib/game/**
					   backgammonator/lib/logger/GameLogger.class
					   backgammonator/impl/game/**
			           backgammonator/impl/logger/*GameLogger*
			           backgammonator/impl/protocol/**
					   backgammonator/util/**
			
			           backgammonator/impl/game/Main.class
			
			           sample/backgammonator/sample/player/protocol/**
			           sample/backgammonator/sample/player/interfacce/**
					   backgammonator.properties" />
		
	</target>

	<!-- web interface classes to deploy in tomcat -->
	<target name="distWeb" depends="compile">
		<jar jarfile="${lib}/backgammonatorWeb.jar"
			 basedir="${build}"
			 includes="backgammonator/impl/webinterface/*" />
	</target>
	
    <!-- core library to deploy in tomcat -->
	<target name="distCore" depends="compile">
		<jar jarfile="${lib}/backgammonatorCore.jar"
			 basedir="${build}"
			 includes="backgammonator/lib/game/**
					   backgammonator/lib/logger/**
		               backgammonator/lib/tournament/**
				       backgammonator/impl/game/**
					   backgammonator/impl/logger/**
					   backgammonator/impl/protocol/**
		               backgammonator/impl/tournament/**
					   backgammonator/util/**
	
                       backgammonator/sample/player/interfacce/AbstractSamplePlayer.class
			           backgammonator/sample/player/interfacce/SamplePlayer.class" />
		
	</target>

	<target name="clean" description="clean up">
		<!-- Delete the ${build} directory trees -->
		<delete dir="${build}" />
	</target>
</project>